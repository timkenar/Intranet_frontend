{"ast":null,"code":"var _jsxFileName = \"/home/timkenar/Onboard/src/components/EditableText.js\",\n  _s = $RefreshSig$();\n// src/components/EditableText.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableText = ({\n  storageKey,\n  defaultValue\n}) => {\n  _s();\n  const [text, setText] = useState(defaultValue);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    const savedText = localStorage.getItem(storageKey);\n    if (savedText) {\n      setText(savedText);\n    }\n  }, [storageKey]);\n  const handleSave = () => {\n    localStorage.setItem(storageKey, text);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      onBlur: handleSave,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => setIsEditing(true),\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(EditableText, \"pdDNsMG6GkQuFqYGQc8qEr6f1oY=\");\n_c = EditableText;\nexport default EditableText;\nvar _c;\n$RefreshReg$(_c, \"EditableText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EditableText","storageKey","defaultValue","_s","text","setText","isEditing","setIsEditing","savedText","localStorage","getItem","handleSave","setItem","children","value","onChange","e","target","onBlur","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/timkenar/Onboard/src/components/EditableText.js"],"sourcesContent":["// src/components/EditableText.js\nimport React, { useState, useEffect } from 'react';\n\nconst EditableText = ({ storageKey, defaultValue }) => {\n    const [text, setText] = useState(defaultValue);\n    const [isEditing, setIsEditing] = useState(false);\n\n    useEffect(() => {\n        const savedText = localStorage.getItem(storageKey);\n        if (savedText) {\n            setText(savedText);\n        }\n    }, [storageKey]);\n\n    const handleSave = () => {\n        localStorage.setItem(storageKey, text);\n        setIsEditing(false);\n    };\n\n    return (\n        <div>\n            {isEditing ? (\n                <textarea\n                    value={text}\n                    onChange={(e) => setText(e.target.value)}\n                    onBlur={handleSave}\n                    autoFocus\n                />\n            ) : (\n                <p onClick={() => setIsEditing(true)}>{text}</p>\n            )}\n        </div>\n    );\n};\n\nexport default EditableText;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACM,YAAY,CAAC;EAC9C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAO,CAACT,UAAU,CAAC;IAClD,IAAIO,SAAS,EAAE;MACXH,OAAO,CAACG,SAAS,CAAC;IACtB;EACJ,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACrBF,YAAY,CAACG,OAAO,CAACX,UAAU,EAAEG,IAAI,CAAC;IACtCG,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIR,OAAA;IAAAc,QAAA,EACKP,SAAS,gBACNP,OAAA;MACIe,KAAK,EAAEV,IAAK;MACZW,QAAQ,EAAGC,CAAC,IAAKX,OAAO,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,MAAM,EAAEP,UAAW;MACnBQ,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,gBAEFxB,OAAA;MAAGyB,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAAC,IAAI,CAAE;MAAAM,QAAA,EAAET;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAClD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACpB,EAAA,CA9BIH,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}