{"ast":null,"code":"// // src/SignUp.js\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// // import './theme.css';\n\n// const SignUp = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSignUp = (e) => {\n//     e.preventDefault();\n//     // Handle sign-up logic here\n//     if (password !== confirmPassword) {\n//       alert('Passwords do not match!');\n//       return;\n//     }\n//     console.log('Sign Up:', { email, password });\n//     // After sign-up, navigate to login or another page\n//     navigate('/');\n//   };\n\n//   return (\n//     <div>\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSignUp}>\n//         <div>\n//           <label>Email:</label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//             <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Confirm Password:</label>\n//           <input\n//             type=\"password\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Sign Up</button>\n//       </form>\n//       <button onClick={() => navigate('/')}>Back to Login</button>\n//     </div>\n//   );\n// };\n\n// export default SignUp;","map":{"version":3,"names":[],"sources":["/home/timkenar/Onboard/src/components/auth/Signup.js"],"sourcesContent":["// // src/SignUp.js\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// // import './theme.css';\n\n// const SignUp = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSignUp = (e) => {\n//     e.preventDefault();\n//     // Handle sign-up logic here\n//     if (password !== confirmPassword) {\n//       alert('Passwords do not match!');\n//       return;\n//     }\n//     console.log('Sign Up:', { email, password });\n//     // After sign-up, navigate to login or another page\n//     navigate('/');\n//   };\n\n//   return (\n//     <div>\n//       <h2>Sign Up</h2>\n//       <form onSubmit={handleSignUp}>\n//         <div>\n//           <label>Email:</label>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Password:</label>\n//             <input\n//             type=\"password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Confirm Password:</label>\n//           <input\n//             type=\"password\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Sign Up</button>\n//       </form>\n//       <button onClick={() => navigate('/')}>Back to Login</button>\n//     </div>\n//   );\n// };\n\n// export default SignUp;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}